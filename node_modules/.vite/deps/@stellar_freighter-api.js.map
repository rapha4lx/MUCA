{
  "version": 3,
  "sources": ["../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/webpack/universalModuleDefinition", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/webpack/bootstrap", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@shared/constants/services.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/webpack/runtime/define property getters", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/webpack/runtime/hasOwnProperty shorthand", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/webpack/runtime/make namespace object", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@shared/api/helpers/extensionMessaging.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@shared/api/external.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getAddress.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/addToken.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signTransaction.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signMessage.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signAuthEntry.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/isConnected.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getNetwork.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getNetworkDetails.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/isAllowed.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/setAllowed.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/requestAccess.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/watchWalletChanges.ts", "../../.pnpm/@stellar+freighter-api@5.0.0/node_modules/@stellar/freighter-api/build/webpack:/freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/index.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"freighterApi\"] = factory();\n\telse\n\t\troot[\"freighterApi\"] = factory();\n})(this, () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "export enum SERVICE_TYPES {\n  CREATE_ACCOUNT = \"CREATE_ACCOUNT\",\n  FUND_ACCOUNT = \"FUND_ACCOUNT\",\n  ADD_ACCOUNT = \"ADD_ACCOUNT\",\n  IMPORT_ACCOUNT = \"IMPORT_ACCOUNT\",\n  IMPORT_HARDWARE_WALLET = \"IMPORT_HARDWARE_WALLET\",\n  LOAD_ACCOUNT = \"LOAD_ACCOUNT\",\n  MAKE_ACCOUNT_ACTIVE = \"MAKE_ACCOUNT_ACTIVE\",\n  UPDATE_ACCOUNT_NAME = \"UPDATE_ACCOUNT_NAME\",\n  GET_MNEMONIC_PHRASE = \"GET_MNEMONIC_PHRASE\",\n  CONFIRM_MNEMONIC_PHRASE = \"CONFIRM_MNEMONIC_PHRASE\",\n  CONFIRM_MIGRATED_MNEMONIC_PHRASE = \"CONFIRM_MIGRATED_MNEMONIC_PHRASE\",\n  RECOVER_ACCOUNT = \"RECOVER_ACCOUNT\",\n  CONFIRM_PASSWORD = \"CONFIRM_PASSWORD\",\n  REJECT_ACCESS = \"REJECT_ACCESS\",\n  GRANT_ACCESS = \"GRANT_ACCESS\",\n  ADD_TOKEN = \"ADD_TOKEN\",\n  SIGN_TRANSACTION = \"SIGN_TRANSACTION\",\n  SIGN_BLOB = \"SIGN_BLOB\",\n  SIGN_AUTH_ENTRY = \"SIGN_AUTH_ENTRY\",\n  HANDLE_SIGNED_HW_PAYLOAD = \"HANDLE_SIGNED_HW_PAYLOAD\",\n  REJECT_TRANSACTION = \"REJECT_TRANSACTION\",\n  SIGN_FREIGHTER_TRANSACTION = \"SIGN_FREIGHTER_TRANSACTION\",\n  SIGN_FREIGHTER_SOROBAN_TRANSACTION = \"SIGN_FREIGHTER_SOROBAN_TRANSACTION\",\n  ADD_RECENT_ADDRESS = \"ADD_RECENT_ADDRESS\",\n  LOAD_RECENT_ADDRESSES = \"LOAD_RECENT_ADDRESSES\",\n  LOAD_LAST_USED_ACCOUNT = \"LOAD_LAST_USED_ACCOUNT\",\n  SIGN_OUT = \"SIGN_OUT\",\n  SHOW_BACKUP_PHRASE = \"SHOW_BACKUP_PHRASE\",\n  SAVE_ALLOWLIST = \"SAVE_ALLOWLIST\",\n  SAVE_SETTINGS = \"SAVE_SETTINGS\",\n  SAVE_EXPERIMENTAL_FEATURES = \"SAVE_EXPERIMENTAL_FEATURES\",\n  LOAD_SETTINGS = \"LOAD_SETTINGS\",\n  GET_CACHED_ASSET_ICON = \"GET_CACHED_ASSET_ICON\",\n  CACHE_ASSET_ICON = \"CACHE_ASSET_ICON\",\n  GET_CACHED_ASSET_DOMAIN = \"GET_CACHED_ASSET_DOMAIN\",\n  CACHE_ASSET_DOMAIN = \"CACHE_ASSET_DOMAIN\",\n  GET_MEMO_REQUIRED_ACCOUNTS = \"GET_MEMO_REQUIRED_ACCOUNTS\",\n  ADD_CUSTOM_NETWORK = \"ADD_CUSTOM_NETWORK\",\n  CHANGE_NETWORK = \"CHANGE_NETWORK\",\n  REMOVE_CUSTOM_NETWORK = \"REMOVE_CUSTOM_NETWORK\",\n  EDIT_CUSTOM_NETWORK = \"EDIT_CUSTOM_NETWORK\",\n  RESET_EXP_DATA = \"RESET_EXP_DATA\",\n  ADD_TOKEN_ID = \"ADD_TOKEN_ID\",\n  GET_TOKEN_IDS = \"GET_TOKEN_IDS\",\n  REMOVE_TOKEN_ID = \"REMOVE_TOKEN_ID\",\n  GET_MIGRATABLE_ACCOUNTS = \"GET_MIGRATABLE_ACCOUNTS\",\n  GET_MIGRATED_MNEMONIC_PHRASE = \"GET_MIGRATED_MNEMONIC_PHRASE\",\n  MIGRATE_ACCOUNTS = \"MIGRATE_ACCOUNTS\",\n  ADD_ASSETS_LIST = \"ADD_ASSETS_LIST\",\n  MODIFY_ASSETS_LIST = \"MODIFY_ASSETS_LIST\",\n  CHANGE_ASSET_VISIBILITY = \"CHANGE_ASSET_VISIBILITY\",\n  GET_HIDDEN_ASSETS = \"GET_HIDDEN_ASSETS\",\n  GET_IS_ACCOUNT_MISMATCH = \"GET_IS_ACCOUNT_MISMATCH\",\n}\n\nexport enum EXTERNAL_SERVICE_TYPES {\n  REQUEST_ACCESS = \"REQUEST_ACCESS\",\n  REQUEST_PUBLIC_KEY = \"REQUEST_PUBLIC_KEY\",\n  SUBMIT_TOKEN = \"SUBMIT_TOKEN\",\n  SUBMIT_TRANSACTION = \"SUBMIT_TRANSACTION\",\n  SUBMIT_BLOB = \"SUBMIT_BLOB\",\n  SUBMIT_AUTH_ENTRY = \"SUBMIT_AUTH_ENTRY\",\n  REQUEST_NETWORK = \"REQUEST_NETWORK\",\n  REQUEST_NETWORK_DETAILS = \"REQUEST_NETWORK_DETAILS\",\n  REQUEST_CONNECTION_STATUS = \"REQUEST_CONNECTION_STATUS\",\n  REQUEST_ALLOWED_STATUS = \"REQUEST_ALLOWED_STATUS\",\n  SET_ALLOWED_STATUS = \"SET_ALLOWED_STATUS\",\n  REQUEST_USER_INFO = \"REQUEST_USER_INFO\",\n}\n\nexport const EXTERNAL_MSG_REQUEST = \"FREIGHTER_EXTERNAL_MSG_REQUEST\";\nexport const EXTERNAL_MSG_RESPONSE = \"FREIGHTER_EXTERNAL_MSG_RESPONSE\";\n\ndeclare const DEV_SERVER: string;\nconst _DEV_SERVER = DEV_SERVER;\nexport { _DEV_SERVER as DEV_SERVER };\n\ndeclare const DEV_EXTENSION: string;\nconst _DEV_EXTENSION = DEV_EXTENSION;\nexport { _DEV_EXTENSION as DEV_EXTENSION };\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "import browser from \"webextension-polyfill\";\nimport {\n  DEV_SERVER,\n  EXTERNAL_MSG_RESPONSE,\n  EXTERNAL_MSG_REQUEST,\n  EXTERNAL_SERVICE_TYPES,\n  SERVICE_TYPES,\n} from \"../../constants/services\";\nimport { Response } from \"../types\";\n\ntype Msg =\n  | {\n      [key: string]: any;\n      activePublicKey: string | null;\n      type: SERVICE_TYPES;\n    }\n  | {\n      [key: string]: any;\n      type: EXTERNAL_SERVICE_TYPES;\n    };\n\nexport const sendMessageToContentScript = (msg: Msg): Promise<Response> => {\n  /* \n    In the case of multiple calls coming in sequentially, we use this MESSAGE_ID to make sure we're responding to\n    the appropriate message sender. Otherwise, we can run into race conditions where we simply resolve all \n    sent messages with the first thing that comes back.\n  */\n  const MESSAGE_ID = Date.now() + Math.random();\n\n  window.postMessage(\n    { source: EXTERNAL_MSG_REQUEST, messageId: MESSAGE_ID, ...msg },\n    window.location.origin\n  );\n  return new Promise((resolve) => {\n    let requestTimeout = 0 as any;\n\n    /* \n      In the case that Freighter is not installed at all, any messages to \n      background from freighter-api will hang forever and not respond in any way. \n      This is especially a problem for the isConnected method, because this is \n      likely to be called in a situation where Freighter isn't installed.\n      To prevent this, we add a timeout to automatically resolve in the event \n      Freighter doesn't respond in a timely fashion to this method.\n    */\n    if (\n      msg.type === EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS ||\n      msg.type === EXTERNAL_SERVICE_TYPES.REQUEST_PUBLIC_KEY\n    ) {\n      requestTimeout = setTimeout(() => {\n        resolve({\n          isConnected: false,\n          publicKey: \"\",\n        } as Response);\n        window.removeEventListener(\"message\", messageListener);\n      }, 2000);\n    }\n\n    const messageListener = (event: { source: any; data: Response }) => {\n      // We only accept messages from ourselves\n      if (event.source !== window) return;\n      // Only respond to messages tagged as being from our content script\n      if (event?.data?.source !== EXTERNAL_MSG_RESPONSE) return;\n      // Only respond to messages that this instance of sendMessageToContentScript sent\n      if (event?.data?.messagedId !== MESSAGE_ID) return;\n\n      resolve(event.data);\n      window.removeEventListener(\"message\", messageListener);\n      clearTimeout(requestTimeout);\n    };\n    window.addEventListener(\"message\", messageListener, false);\n  });\n};\n\nexport const sendMessageToBackground = async (msg: Msg): Promise<Response> => {\n  let res;\n\n  if (DEV_SERVER) {\n    // treat this as an external call because we're making the call from the browser, not the popup\n    res = await sendMessageToContentScript(msg);\n  } else {\n    res = (await browser.runtime.sendMessage(msg)) as Response;\n  }\n\n  return res as Response;\n};\n\nexport const FreighterApiNodeError = {\n  code: -1,\n  message: \"Node environment is not supported\",\n};\n\nexport const FreighterApiInternalError = {\n  code: -1,\n  message:\n    \"The wallet encountered an internal error. Please try again or contact the wallet if the problem persists.\",\n};\n\nexport const FreighterApiDeclinedError = {\n  code: -4,\n  message: \"The user rejected this request.\",\n};\n", "import { EXTERNAL_SERVICE_TYPES } from \"../constants/services\";\nimport { NetworkDetails } from \"../constants/stellar\";\nimport {\n  sendMessageToContentScript,\n  FreighterApiInternalError,\n} from \"./helpers/extensionMessaging\";\nimport { FreighterApiError } from \"./types\";\n\nexport const requestAccess = async (): Promise<{\n  publicKey: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ACCESS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { publicKey } = response || { publicKey: \"\" };\n\n  return { publicKey, error: response?.apiError };\n};\n\nexport const requestPublicKey = async (): Promise<{\n  publicKey: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_PUBLIC_KEY,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return { publicKey: response?.publicKey || \"\", error: response?.apiError };\n};\n\nexport const submitToken = async (args: {\n  contractId: string;\n  networkPassphrase?: string;\n}): Promise<{\n  contractId?: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      contractId: args.contractId,\n      networkPassphrase: args.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_TOKEN,\n    });\n  } catch (e) {\n    return {\n      error: FreighterApiInternalError,\n    };\n  }\n\n  return {\n    contractId: response.contractId,\n    error: response?.apiError,\n  };\n};\n\nexport const submitTransaction = async (\n  transactionXdr: string,\n  opts?:\n    | string\n    | {\n        accountToSign?: string;\n        networkPassphrase?: string;\n      },\n  accountToSign?: string,\n): Promise<{\n  signedTransaction: string;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  let network;\n  let _accountToSign;\n  let networkPassphrase;\n\n  /* \n  As of v1.3.0, this method now accepts an object as its second param. \n  Previously, it accepted optional second and third string parameters.\n  This logic maintains backwards compatibility for older versions\n  */\n  if (typeof opts === \"object\") {\n    _accountToSign = opts.accountToSign;\n    networkPassphrase = opts.networkPassphrase;\n  } else {\n    network = opts;\n    _accountToSign = accountToSign;\n  }\n\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      transactionXdr,\n      network,\n      networkPassphrase,\n      accountToSign: _accountToSign,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_TRANSACTION,\n    });\n  } catch (e) {\n    return {\n      signedTransaction: \"\",\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedTransaction, signerAddress } = response;\n\n  return { signedTransaction, signerAddress, error: response?.apiError };\n};\n\nexport const submitMessage = async (\n  blob: string,\n  version: string,\n  opts?: {\n    address?: string;\n    networkPassphrase?: string;\n  },\n): Promise<{\n  signedMessage: Buffer | null;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  const _opts = opts || {};\n  const accountToSign = _opts.address;\n  try {\n    response = await sendMessageToContentScript({\n      blob,\n      accountToSign,\n      apiVersion: version,\n      networkPassphrase: opts?.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_BLOB,\n    });\n  } catch (e) {\n    return {\n      signedMessage: null,\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedBlob, signerAddress } = response;\n\n  return {\n    signedMessage: signedBlob || null,\n    signerAddress,\n    error: response?.apiError,\n  };\n};\n\nexport const submitAuthEntry = async (\n  entryXdr: string,\n  version: string,\n  opts?: {\n    address?: string;\n    networkPassphrase?: string;\n  },\n): Promise<{\n  signedAuthEntry: Buffer | null;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  const _opts = opts || {};\n  const accountToSign = _opts.address;\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      entryXdr,\n      accountToSign,\n      apiVersion: version,\n      networkPassphrase: opts?.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_AUTH_ENTRY,\n    });\n  } catch (e) {\n    console.error(e);\n    return {\n      signedAuthEntry: null,\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedAuthEntry, signerAddress } = response;\n\n  return {\n    signedAuthEntry: signedAuthEntry || null,\n    signerAddress,\n    error: response?.apiError,\n  };\n};\n\nexport const requestNetwork = async (): Promise<{\n  network: string;\n  networkPassphrase: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK_DETAILS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { networkDetails } = response || {\n    networkDetails: { network: \"\", networkPassphrase: \"\" },\n  };\n\n  return {\n    network: networkDetails?.network,\n    networkPassphrase: networkDetails?.networkPassphrase,\n    error: response?.apiError,\n  };\n};\n\nexport const requestNetworkDetails = async (): Promise<{\n  network: string;\n  networkUrl: string;\n  networkPassphrase: string;\n  sorobanRpcUrl?: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK_DETAILS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { networkDetails, apiError } = response || {\n    networkDetails: {\n      network: \"\",\n      networkName: \"\",\n      networkUrl: \"\",\n      networkPassphrase: \"\",\n      sorobanRpcUrl: undefined,\n      apiError: \"\",\n    } as NetworkDetails,\n  };\n\n  const { network, networkUrl, networkPassphrase, sorobanRpcUrl } =\n    networkDetails;\n\n  return {\n    network,\n    networkUrl,\n    networkPassphrase,\n    sorobanRpcUrl,\n    error: apiError,\n  };\n};\n\nexport const requestConnectionStatus = async (): Promise<{\n  isConnected: boolean;\n}> => {\n  let response = {\n    isConnected: false,\n  };\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return { isConnected: response.isConnected };\n};\n\nexport const requestAllowedStatus = async (): Promise<{\n  isAllowed: boolean;\n  error?: FreighterApiError;\n}> => {\n  let response;\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ALLOWED_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { isAllowed } = response || { isAllowed: false };\n\n  return { isAllowed, error: response?.apiError };\n};\n\nexport const setAllowedStatus = async (): Promise<{\n  isAllowed: boolean;\n  error?: FreighterApiError;\n}> => {\n  let response;\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.SET_ALLOWED_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { isAllowed } = response || {\n    isAllowed: false,\n  };\n\n  return { isAllowed, error: response?.apiError };\n};\n", "import { requestPublicKey } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getAddress = async (): Promise<\n  { address: string } & { error?: FreighterApiError }\n> => {\n  let address = \"\";\n  if (isBrowser) {\n    const req = await requestPublicKey();\n    address = req.publicKey;\n\n    if (req.error) {\n      return { address, error: req.error };\n    }\n\n    return { address };\n  }\n\n  return { address, error: FreighterApiNodeError };\n};\n", "import { submitToken } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const addToken = async (args: {\n  contractId: string;\n  networkPassphrase?: string;\n}): Promise<{ contractId: string } & { error?: FreighterApiError }> => {\n  if (isBrowser) {\n    const req = await submitToken(args);\n\n    if (req.error) {\n      return { contractId: \"\", error: req.error };\n    }\n\n    return { contractId: req.contractId || \"\" };\n  }\n\n  return { contractId: \"\", error: FreighterApiNodeError };\n};\n", "import { submitTransaction } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const signTransaction = async (\n  transactionXdr: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<\n  { signedTxXdr: string; signerAddress: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const req = await submitTransaction(transactionXdr, opts);\n\n    if (req.error) {\n      return { signedTxXdr: \"\", signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedTxXdr: req.signedTransaction,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return { signedTxXdr: \"\", signerAddress: \"\", error: FreighterApiNodeError };\n};\n", "import { Buffer } from \"buffer\";\n\nimport {\n  requestAllowedStatus,\n  requestAccess,\n  submitMessage,\n} from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\ntype SignMessageV3Response = {\n  signedMessage: Buffer | null;\n  signerAddress: string;\n} & {\n  error?: FreighterApiError;\n};\n\ntype SignMessageV4Response = {\n  signedMessage: string;\n  signerAddress: string;\n} & {\n  error?: FreighterApiError;\n};\n\nexport const signMessage = async (\n  message: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<SignMessageV3Response | SignMessageV4Response> => {\n  if (isBrowser) {\n    const { isAllowed } = await requestAllowedStatus();\n    if (!isAllowed) {\n      const req = await requestAccess();\n\n      if (req.error) {\n        return { signedMessage: null, signerAddress: \"\", error: req.error };\n      }\n    }\n\n    const req = await submitMessage(message, __PACKAGE_VERSION__, opts);\n\n    if (req.error) {\n      return { signedMessage: null, signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedMessage: req.signedMessage,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return {\n    signedMessage: null,\n    signerAddress: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n", "import {\n  requestAccess,\n  requestAllowedStatus,\n  submitAuthEntry,\n} from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const signAuthEntry = async (\n  entryXdr: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<\n  { signedAuthEntry: Buffer | null; signerAddress: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const { isAllowed } = await requestAllowedStatus();\n    if (!isAllowed) {\n      const req = await requestAccess();\n\n      if (req.error) {\n        return { signedAuthEntry: null, signerAddress: \"\", error: req.error };\n      }\n    }\n\n    const req = await submitAuthEntry(entryXdr, __PACKAGE_VERSION__, opts);\n\n    if (req.error) {\n      return { signedAuthEntry: null, signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedAuthEntry: req.signedAuthEntry,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return {\n    signedAuthEntry: null,\n    signerAddress: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n", "import { requestConnectionStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const isConnected = async (): Promise<\n  { isConnected: boolean } & { error?: FreighterApiError }\n> => {\n  if (isBrowser) {\n    if (window.freighter) {\n      return Promise.resolve({ isConnected: window.freighter });\n    }\n\n    return requestConnectionStatus();\n  }\n\n  return { isConnected: false, error: FreighterApiNodeError };\n};\n", "import { requestNetwork } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getNetwork = async (): Promise<\n  { network: string; networkPassphrase: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const req = await requestNetwork();\n\n    if (req.error) {\n      return { network: \"\", networkPassphrase: \"\", error: req.error };\n    }\n\n    return { network: req.network, networkPassphrase: req.networkPassphrase };\n  }\n\n  return { network: \"\", networkPassphrase: \"\", error: FreighterApiNodeError };\n};\n", "import { requestNetworkDetails } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getNetworkDetails = async (): Promise<\n  {\n    network: string;\n    networkUrl: string;\n    networkPassphrase: string;\n    sorobanRpcUrl?: string;\n  } & { error?: FreighterApiError }\n> => {\n  if (isBrowser) {\n    const req = await requestNetworkDetails();\n\n    if (req.error) {\n      return {\n        network: \"\",\n        networkUrl: \"\",\n        networkPassphrase: \"\",\n        error: req.error,\n      };\n    }\n\n    return {\n      network: req.network,\n      networkUrl: req.networkUrl,\n      networkPassphrase: req.networkPassphrase,\n      sorobanRpcUrl: req.sorobanRpcUrl,\n    };\n  }\n\n  return {\n    network: \"\",\n    networkUrl: \"\",\n    networkPassphrase: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n", "import { requestAllowedStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const isAllowed = async (): Promise<\n  { isAllowed: boolean } & { error?: FreighterApiError }\n> => {\n  let isAllowed = false;\n  if (isBrowser) {\n    const req = await requestAllowedStatus();\n    isAllowed = req.isAllowed;\n\n    if (req.error) {\n      return { isAllowed, error: req.error };\n    }\n\n    return { isAllowed };\n  }\n\n  return { isAllowed, error: FreighterApiNodeError };\n};\n", "import { setAllowedStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const setAllowed = async (): Promise<\n  { isAllowed: boolean } & { error?: FreighterApiError }\n> => {\n  let isAllowed = false;\n  if (isBrowser) {\n    const req = await setAllowedStatus();\n    isAllowed = req.isAllowed;\n\n    if (req.error) {\n      return { isAllowed, error: req.error };\n    }\n\n    return { isAllowed };\n  }\n\n  return { isAllowed, error: FreighterApiNodeError };\n};\n", "import { requestAccess as requestAccessApi } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const requestAccess = async (): Promise<\n  { address: string } & { error?: FreighterApiError }\n> => {\n  let address = \"\";\n  if (isBrowser) {\n    const req = await requestAccessApi();\n    address = req.publicKey;\n\n    if (req.error) {\n      return { address, error: req.error };\n    }\n\n    return { address };\n  }\n\n  return { address, error: FreighterApiNodeError };\n};\n", "import { requestPublicKey } from \"@shared/api/external\";\nimport { requestNetworkDetails } from \"@shared/api/external\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { isBrowser } from \".\";\n\ninterface CallbackParams {\n  address: string;\n  network: string;\n  networkPassphrase: string;\n  error?: FreighterApiError;\n}\n\nexport class WatchWalletChanges {\n  timeout: number;\n  currentAddress: string;\n  currentNetwork: string;\n  currentNetworkPassphrase: string;\n  isRunning: boolean;\n\n  constructor(timeout = 3000) {\n    this.timeout = timeout;\n    this.currentAddress = \"\";\n    this.currentNetwork = \"\";\n    this.currentNetworkPassphrase = \"\";\n    this.isRunning = false;\n  }\n\n  watch(cb: (params: CallbackParams) => void): { error?: FreighterApiError } {\n    if (!isBrowser) {\n      return { error: FreighterApiNodeError };\n    }\n    this.isRunning = true;\n    this.fetchInfo(cb);\n\n    return {};\n  }\n\n  fetchInfo = async (cb: (params: CallbackParams) => void) => {\n    if (!this.isRunning) {\n      return;\n    }\n    const publicKeyReq = await requestPublicKey();\n    const networkDetailsReq = await requestNetworkDetails();\n\n    if (publicKeyReq.error || networkDetailsReq.error) {\n      cb({\n        address: \"\",\n        network: \"\",\n        networkPassphrase: \"\",\n        error: publicKeyReq.error || networkDetailsReq.error,\n      });\n    }\n\n    if (\n      this.currentAddress !== publicKeyReq.publicKey ||\n      this.currentNetwork !== networkDetailsReq.network ||\n      this.currentNetworkPassphrase !== networkDetailsReq.networkPassphrase\n    ) {\n      this.currentAddress = publicKeyReq.publicKey;\n      this.currentNetwork = networkDetailsReq.network;\n      this.currentNetworkPassphrase = networkDetailsReq.networkPassphrase;\n\n      cb({\n        address: publicKeyReq.publicKey,\n        network: networkDetailsReq.network,\n        networkPassphrase: networkDetailsReq.networkPassphrase,\n      });\n    }\n\n    setTimeout(() => this.fetchInfo(cb), this.timeout);\n  };\n\n  stop() {\n    this.isRunning = false;\n  }\n}\n", "import { getAddress } from \"./getAddress\";\nimport { addToken } from \"./addToken\";\nimport { signTransaction } from \"./signTransaction\";\nimport { signMessage } from \"./signMessage\";\nimport { signAuthEntry } from \"./signAuthEntry\";\nimport { isConnected } from \"./isConnected\";\nimport { getNetwork } from \"./getNetwork\";\nimport { getNetworkDetails } from \"./getNetworkDetails\";\nimport { isAllowed } from \"./isAllowed\";\nimport { setAllowed } from \"./setAllowed\";\nimport { requestAccess } from \"./requestAccess\";\nimport { WatchWalletChanges } from \"./watchWalletChanges\";\n\nexport const isBrowser = typeof window !== \"undefined\";\n\nexport {\n  getAddress,\n  addToken,\n  signTransaction,\n  signMessage,\n  signAuthEntry,\n  isConnected,\n  getNetwork,\n  getNetworkDetails,\n  isAllowed,\n  setAllowed,\n  requestAccess,\n  WatchWalletChanges,\n};\nexport default {\n  getAddress,\n  addToken,\n  signTransaction,\n  signMessage,\n  signAuthEntry,\n  isConnected,\n  getNetwork,\n  getNetworkDetails,\n  isAllowed,\n  setAllowed,\n  requestAccess,\n  WatchWalletChanges,\n};\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "this", "SERVICE_TYPES", "EXTERNAL_SERVICE_TYPES", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "r", "sendMessageToContentScript", "msg", "MESSAGE_ID", "Date", "now", "Math", "random", "window", "postMessage", "source", "messageId", "location", "origin", "Promise", "resolve", "requestTimeout", "type", "REQUEST_CONNECTION_STATUS", "REQUEST_PUBLIC_KEY", "setTimeout", "isConnected", "publicKey", "removeEventListener", "messageListener", "event", "e", "data", "E", "messagedId", "clearTimeout", "addEventListener", "FreighterApiNodeError", "code", "message", "FreighterApiInternalError", "requestAccess", "async", "response", "REQUEST_ACCESS", "console", "error", "apiError", "requestPublicKey", "requestNetworkDetails", "REQUEST_NETWORK_DETAILS", "networkDetails", "network", "networkName", "networkUrl", "networkPassphrase", "sorobanRpcUrl", "requestAllowedStatus", "REQUEST_ALLOWED_STATUS", "isAllowed", "getAddress", "address", "isBrowser", "req", "addToken", "args", "contractId", "SUBMIT_TOKEN", "signTransaction", "transactionXdr", "opts", "_accountToSign", "accountToSign", "SUBMIT_TRANSACTION", "signedTransaction", "signerAddress", "signedTxXdr", "signMessage", "signedMessage", "blob", "version", "apiVersion", "SUBMIT_BLOB", "signedBlob", "signAuthEntry", "entryXdr", "signedAuthEntry", "SUBMIT_AUTH_ENTRY", "freighter", "requestConnectionStatus", "getNetwork", "requestNetwork", "getNetworkDetails", "setAllowed", "SET_ALLOWED_STATUS", "setAllowedStatus", "WatchWalletChanges", "timeout", "fetchInfo", "cb", "isRunning", "publicKeyReq", "networkDetailsReq", "currentAddress", "currentNetwork", "currentNetworkPassphrase", "stop"]
}
